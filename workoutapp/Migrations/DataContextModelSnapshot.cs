// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using workoutapp.Data;

namespace workoutapp.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9");

            modelBuilder.Entity("VirtualDesk.Models.AccountsList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailAdress")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsPrivate")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Pass")
                        .HasColumnType("TEXT");

                    b.Property<int>("PopPort")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PopServer")
                        .HasColumnType("TEXT");

                    b.Property<int>("SmtpPort")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SmtpServer")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("accountsLists");
                });

            modelBuilder.Entity("VirtualDesk.Models.EmailAccountList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("emailAccountLists");
                });

            modelBuilder.Entity("workoutapp.Models.BMICalculator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("Height")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Result")
                        .HasColumnType("REAL");

                    b.Property<int>("Weight")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("BMIResults");
                });

            modelBuilder.Entity("workoutapp.Models.BodyFatCalculator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<double>("BodyFatPercentage")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<double>("FatMass")
                        .HasColumnType("REAL");

                    b.Property<bool>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Height")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Hip")
                        .HasColumnType("REAL");

                    b.Property<double>("LeanMass")
                        .HasColumnType("REAL");

                    b.Property<double>("Neck")
                        .HasColumnType("REAL");

                    b.Property<bool>("Save")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Waist")
                        .HasColumnType("REAL");

                    b.Property<double>("Weight")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("BodyFatCalculator");
                });

            modelBuilder.Entity("workoutapp.Models.BodyMeasure", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("BicepsRight")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Bicepsleft")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CalfLeft")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CalfRight")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Chest")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("Hips")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Midsection")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ThighLeft")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ThighRight")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Waist")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Weight")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("BodyMeasure");
                });

            modelBuilder.Entity("workoutapp.Models.Exercise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("WorkoutId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("WorkoutId");

                    b.ToTable("exercises");
                });

            modelBuilder.Entity("workoutapp.Models.Workout", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("Results")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("workout");
                });

            modelBuilder.Entity("workoutapp.Models.Exercise", b =>
                {
                    b.HasOne("workoutapp.Models.Workout", null)
                        .WithMany("Exercises")
                        .HasForeignKey("WorkoutId");
                });
#pragma warning restore 612, 618
        }
    }
}
